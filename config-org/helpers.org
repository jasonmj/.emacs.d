#+TITLE: Helpers
#+PROPERTY: header-args      :tangle "../config-elisp/helpers.el"
* Alert Config
#+BEGIN_SRC emacs-lisp
(use-package alert
  :ensure t
  :commands (alert)
  :init
  (setq alert-fade-time 10
        alert-default-style 'notifications))
#+END_SRC
* App Launcher
#+begin_src emacs-lisp
(use-package app-launcher
  :straight '(app-launcher :host github :repo "SebastienWae/app-launcher")
  :bind (("C-s-SPC" . app-launcher-run-app)))
#+end_src
* Blamer
#+begin_src emacs-lisp
  (use-package blamer
    :ensure t
    :bind (("M-I" . blamer-show-posframe-commit-info))
    :defer 20
    :custom
    (blamer-type 'posframe-popup)
    (blamer-idle-time 0.3)
    (blamer-show-avatar-p nil)
    (blamer-min-offset 70)
    (blamer-posframe-configurations '(:left-fringe 0 :right-fringe 0 :y-pixel-offset 20 :x-pixel-offset -20 :internal-border-width 20 :lines-truncate t :accept-focus nil))
    :custom-face
    (blamer-pretty-border-face ((t nil)))
    (blamer-face ((t :foreground "#7a88cf"
		     :height 140
		     :italic t)))
    :config
    (global-blamer-mode 1))
#+end_src
* Better Quit
#+begin_src emacs-lisp
(key-seq-define-global "gf" 'keyboard-escape-quit)
#+end_src
* Codemetrics
#+begin_src emacs-lisp
  (use-package codemetrics
    :straight (codemetrics :type git :host github :repo "jcs-elpa/codemetrics"))
#+end_src
* DevDocs
#+begin_src emacs-lisp
(use-package devdocs :ensure t)
#+end_src
* Eval Region
#+BEGIN_SRC emacs-lisp
(global-set-key (kbd "C-s-e") 'eval-region)
#+END_SRC
* Git Gutter
#+BEGIN_SRC emacs-lisp
(use-package git-gutter
  :ensure t
  :hook ((prog-mode . git-gutter-mode)))
(with-eval-after-load 'git-gutter
  (defun git-gutter+-remote-default-directory (dir file)
    (let* ((vec (tramp-dissect-file-name file))
           (method (tramp-file-name-method vec))
           (user (tramp-file-name-user vec))
           (domain (tramp-file-name-domain vec))
           (host (tramp-file-name-host vec))
           (port (tramp-file-name-port vec)))
      (tramp-make-tramp-file-name method user domain host port dir)))

    (defun git-gutter-remote-file-path (dir file)
      (let ((file (tramp-file-name-localname (tramp-dissect-file-name file))))
	(replace-regexp-in-string (concat "\\`" dir) "" file))))
#+END_SRC
* Grip GitHub Markdown Previews
#+begin_src emacs-lisp
(use-package grip-mode
  :ensure t
  :config (setq grip-preview-use-webkit nil
		grip-github-user "jasonmj"
		grip-github-password (auth-source-pick-first-password :host "api.github.com" :user "jasonmj^grip")))
#+end_src
* Highlight Current Line
#+BEGIN_SRC emacs-lisp
(global-hl-line-mode +1)
#+END_SRC
* Mouse Avoidance Mode
#+BEGIN_SRC emacs-lisp
(mouse-avoidance-mode 'banish)
(setq mouse-avoidance-banish-position '((frame-or-window . frame)
                                        (side . right)
                                        (side-pos . 0)
                                        (top-or-bottom . top)
                                        (top-or-bottom-pos . 0)))
#+END_SRC
* Olivetti Mode
#+BEGIN_SRC emacs-lisp
(add-hook 'olivetti-mode (lambda () (display-line-numbers-mode -1)))
#+END_SRC
* Pinentry
#+BEGIN_SRC emacs-lisp
(use-package pinentry :ensure t :config (pinentry-start))
#+END_SRC
* Short Answer Yes/No
#+BEGIN_SRC emacs-lisp
(defalias 'yes-or-no-p 'y-or-n-p)
#+END_SRC
* Suspend
#+BEGIN_SRC emacs-lisp
(defun suspend()
  (interactive)
  (shell-command "systemctl suspend"))
(defun suspend-lock()
  (interactive)
  (shell-command "systemctl suspend")
  (shell-command "slock"))
(exwm-input-set-key (kbd "C-x >") 'suspend-lock)
(exwm-input-set-key (kbd "C-x .") 'suspend)
#+END_SRC
* Tramp
#+begin_src emacs-lisp
(use-package tramp
  :config (put 'tramp-remote-path '(tramp-own-remote-path) nil)
          (add-to-list 'tramp-remote-path "~/.asdf/shims/"))
#+end_src
* Which Key
#+begin_src emacs-lisp
(use-package which-key :ensure t :hook (after-init . which-key-mode))
#+end_src
* Writeroom
#+begin_src emacs-lisp
  (use-package writeroom-mode
    :ensure t
    :hook ((devdocs-mode . writeroom-mode))
    :config (setq writeroom-width 100))
#+end_src
